@page
@model site.Pages.Index1Model
@{
    ViewData["Title"] = "Регистрация";
}



<style>
    input:required:user-valid {
        border-color: limegreen;
        border-radius: 2px;
    }

    input:required:user-invalid {
        border-color: red;
        border-radius: 2px;
    }
</style>

<form method="post">
    @* <div asp-validation-summary="ModelOnly" class="text-danger"></div> *@
    <div class="form-group">
        <label asp-for="User.Name" class="control-label"></label>
        <input asp-for="User.Name" class="form-control" />
        <span asp-validation-for="User.Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>
<form  id="123" runat="server">
    <p>Имя:     <input pattern="[А-ЯЁ][а-яё]*" type="text" name="name" required/></p>
    <p>Фамилия: <input pattern="[А-ЯЁ][а-яё]*" type="text" name="surname" required/></p>
    <p>Возраст: <input type="number" name="age" min=18 max=99 required/></p>
    <p>Email:   <input type="email" name="email"/></p>
    <p>Пароль:  <input type="password" name="password" required/></p>
    <p>Телефон: <input class="tel" type="text" name="tel" required/></p>
    <p><input type="submit"/></p>
</form>

<script>
    window.addEventListener("DOMContentLoaded", function() {
      [].forEach.call( document.querySelectorAll('.tel'), function(input) {
        var keyCode;
        function mask(event) {
          event.keyCode && (keyCode = event.keyCode);
          var pos = this.selectionStart;
          if (pos < 3) event.preventDefault();
          var matrix = "+7 (___) ___ ____",
              i = 0,
              def = matrix.replace(/\D/g, ""),
              val = this.value.replace(/\D/g, ""),
              new_value = matrix.replace(/[_\d]/g, function(a) {
                  return i < val.length ? val.charAt(i++) : a
              });
          i = new_value.indexOf("_");
          if (i != -1) {
              i < 5 && (i = 3);
              new_value = new_value.slice(0, i)
          }
          var reg = matrix.substr(0, this.value.length).replace(/_+/g,
              function(a) {
                  return "\\d{1," + a.length + "}"
              }).replace(/[+()]/g, "\\$&");
          reg = new RegExp("^" + reg + "$");
          if (!reg.test(this.value) || this.value.length < 5 || keyCode > 47 && keyCode < 58) {
            this.value = new_value;
          }
          if (event.type == "blur" && this.value.length < 5) {
            this.value = "";
          }
        }

        input.addEventListener("input", mask, false);
        input.addEventListener("focus", mask, false);
        input.addEventListener("blur", mask, false);
        input.addEventListener("keydown", mask, false);

      });
    });
</script>